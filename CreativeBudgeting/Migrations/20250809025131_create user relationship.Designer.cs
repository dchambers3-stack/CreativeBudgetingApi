// <auto-generated />
using System;
using CreativeBudgeting;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace CreativeBudgeting.Migrations
{
    [DbContext(typeof(BudgetDbContext))]
    [Migration("20250809025131_create user relationship")]
    partial class createuserrelationship
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("CreativeBudgeting.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Food"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Utilities"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Entertainment"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Housing"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Transportation"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Health"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Personal Care"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Education"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Debt"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Savings and Investments"
                        },
                        new
                        {
                            Id = 11,
                            Name = "Gifts and Donations"
                        },
                        new
                        {
                            Id = 12,
                            Name = "Miscellaneous"
                        });
                });

            modelBuilder.Entity("CreativeBudgeting.Models.Expense", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("integer");

                    b.Property<string>("DueDate")
                        .HasColumnType("text")
                        .HasColumnName("due_date");

                    b.Property<bool>("IsPaid")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int?>("PaycheckId")
                        .HasColumnType("integer");

                    b.Property<double>("Payment")
                        .HasColumnType("double precision");

                    b.Property<int>("SubcategoryId")
                        .HasColumnType("integer");

                    b.Property<double?>("TotalBalance")
                        .HasColumnType("double precision");

                    b.Property<int>("UserId")
                        .HasColumnType("integer")
                        .HasColumnName("user_id");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("PaycheckId");

                    b.HasIndex("SubcategoryId");

                    b.HasIndex("UserId");

                    b.ToTable("Expenses");
                });

            modelBuilder.Entity("CreativeBudgeting.Models.HelpdeskTicket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsResolved")
                        .HasColumnType("boolean");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("TicketSeverityId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("TicketSeverityId");

                    b.ToTable("HelpdeskTickets");
                });

            modelBuilder.Entity("CreativeBudgeting.Models.Paycheck", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<double>("Amount")
                        .HasColumnType("double precision");

                    b.Property<DateTime>("PayDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Paychecks");
                });

            modelBuilder.Entity("CreativeBudgeting.Models.PersonalInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("FirstName")
                        .HasColumnType("text")
                        .HasColumnName("first_name");

                    b.Property<string>("LastName")
                        .HasColumnType("text")
                        .HasColumnName("last_name");

                    b.Property<int>("UserId")
                        .HasColumnType("integer")
                        .HasColumnName("user_id");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("personal_info", (string)null);
                });

            modelBuilder.Entity("CreativeBudgeting.Models.Savings", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<double>("Amount")
                        .HasColumnType("double precision");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Savings");
                });

            modelBuilder.Entity("CreativeBudgeting.Models.Seeds.RecurringFrequency", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("SortOrder")
                        .HasColumnType("integer");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("RecurringFrequencies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Daily",
                            SortOrder = 1,
                            Value = "daily"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Weekly",
                            SortOrder = 2,
                            Value = "weekly"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Bi-Weekly",
                            SortOrder = 3,
                            Value = "biweekly"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Monthly",
                            SortOrder = 4,
                            Value = "monthly"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Yearly",
                            SortOrder = 5,
                            Value = "yearly"
                        });
                });

            modelBuilder.Entity("CreativeBudgeting.Models.Subcategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Subcategories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            Name = "Groceries"
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 1,
                            Name = "Dining Out"
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 1,
                            Name = "Snacks"
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 1,
                            Name = "Coffee/Tea"
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 1,
                            Name = "Fast Food"
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 2,
                            Name = "Electricity"
                        },
                        new
                        {
                            Id = 7,
                            CategoryId = 2,
                            Name = "Water"
                        },
                        new
                        {
                            Id = 8,
                            CategoryId = 2,
                            Name = "Internet"
                        },
                        new
                        {
                            Id = 9,
                            CategoryId = 2,
                            Name = "Gas"
                        },
                        new
                        {
                            Id = 10,
                            CategoryId = 2,
                            Name = "Trash Collection"
                        },
                        new
                        {
                            Id = 11,
                            CategoryId = 2,
                            Name = "Heating/Cooling"
                        },
                        new
                        {
                            Id = 12,
                            CategoryId = 3,
                            Name = "Movies"
                        },
                        new
                        {
                            Id = 13,
                            CategoryId = 3,
                            Name = "Music"
                        },
                        new
                        {
                            Id = 14,
                            CategoryId = 3,
                            Name = "Sports"
                        },
                        new
                        {
                            Id = 15,
                            CategoryId = 3,
                            Name = "Gaming"
                        },
                        new
                        {
                            Id = 16,
                            CategoryId = 3,
                            Name = "Books"
                        },
                        new
                        {
                            Id = 17,
                            CategoryId = 3,
                            Name = "TV Shows"
                        },
                        new
                        {
                            Id = 18,
                            CategoryId = 3,
                            Name = "Concerts"
                        },
                        new
                        {
                            Id = 19,
                            CategoryId = 4,
                            Name = "Rent"
                        },
                        new
                        {
                            Id = 20,
                            CategoryId = 4,
                            Name = "Mortgage"
                        },
                        new
                        {
                            Id = 21,
                            CategoryId = 4,
                            Name = "Home Repairs"
                        },
                        new
                        {
                            Id = 22,
                            CategoryId = 4,
                            Name = "Property Taxes"
                        },
                        new
                        {
                            Id = 23,
                            CategoryId = 4,
                            Name = "Home Insurance"
                        },
                        new
                        {
                            Id = 24,
                            CategoryId = 4,
                            Name = "Lawn Care"
                        },
                        new
                        {
                            Id = 25,
                            CategoryId = 5,
                            Name = "Gas"
                        },
                        new
                        {
                            Id = 26,
                            CategoryId = 5,
                            Name = "Public Transportation"
                        },
                        new
                        {
                            Id = 27,
                            CategoryId = 5,
                            Name = "Car Insurance"
                        },
                        new
                        {
                            Id = 28,
                            CategoryId = 5,
                            Name = "Parking"
                        },
                        new
                        {
                            Id = 29,
                            CategoryId = 5,
                            Name = "Tolls"
                        },
                        new
                        {
                            Id = 30,
                            CategoryId = 5,
                            Name = "Vehicle Maintenance"
                        },
                        new
                        {
                            Id = 31,
                            CategoryId = 5,
                            Name = "Car Payment"
                        },
                        new
                        {
                            Id = 32,
                            CategoryId = 6,
                            Name = "Health Insurance"
                        },
                        new
                        {
                            Id = 33,
                            CategoryId = 6,
                            Name = "Doctor Visits"
                        },
                        new
                        {
                            Id = 34,
                            CategoryId = 6,
                            Name = "Dentist Visits"
                        },
                        new
                        {
                            Id = 35,
                            CategoryId = 6,
                            Name = "Prescriptions"
                        },
                        new
                        {
                            Id = 36,
                            CategoryId = 6,
                            Name = "Gym Membership"
                        },
                        new
                        {
                            Id = 37,
                            CategoryId = 6,
                            Name = "Mental Health"
                        },
                        new
                        {
                            Id = 38,
                            CategoryId = 6,
                            Name = "Eyewear"
                        },
                        new
                        {
                            Id = 39,
                            CategoryId = 7,
                            Name = "Haircuts"
                        },
                        new
                        {
                            Id = 40,
                            CategoryId = 7,
                            Name = "Skincare"
                        },
                        new
                        {
                            Id = 41,
                            CategoryId = 7,
                            Name = "Toiletries"
                        },
                        new
                        {
                            Id = 42,
                            CategoryId = 7,
                            Name = "Clothing"
                        },
                        new
                        {
                            Id = 43,
                            CategoryId = 7,
                            Name = "Beauty Products"
                        },
                        new
                        {
                            Id = 44,
                            CategoryId = 7,
                            Name = "Spa Treatments"
                        },
                        new
                        {
                            Id = 45,
                            CategoryId = 8,
                            Name = "Tuition"
                        },
                        new
                        {
                            Id = 46,
                            CategoryId = 8,
                            Name = "Books and Supplies"
                        },
                        new
                        {
                            Id = 47,
                            CategoryId = 8,
                            Name = "Online Courses"
                        },
                        new
                        {
                            Id = 48,
                            CategoryId = 8,
                            Name = "Certification Fees"
                        },
                        new
                        {
                            Id = 49,
                            CategoryId = 8,
                            Name = "School Fees"
                        },
                        new
                        {
                            Id = 50,
                            CategoryId = 9,
                            Name = "Credit Card Payments"
                        },
                        new
                        {
                            Id = 51,
                            CategoryId = 9,
                            Name = "Loan Repayments"
                        },
                        new
                        {
                            Id = 52,
                            CategoryId = 9,
                            Name = "Student Loans"
                        },
                        new
                        {
                            Id = 53,
                            CategoryId = 9,
                            Name = "Personal Loans"
                        },
                        new
                        {
                            Id = 54,
                            CategoryId = 10,
                            Name = "Emergency Fund"
                        },
                        new
                        {
                            Id = 55,
                            CategoryId = 10,
                            Name = "Retirement Savings"
                        },
                        new
                        {
                            Id = 56,
                            CategoryId = 10,
                            Name = "Investments"
                        },
                        new
                        {
                            Id = 57,
                            CategoryId = 10,
                            Name = "College Fund"
                        },
                        new
                        {
                            Id = 58,
                            CategoryId = 11,
                            Name = "Birthday Gifts"
                        },
                        new
                        {
                            Id = 59,
                            CategoryId = 11,
                            Name = "Holiday Gifts"
                        },
                        new
                        {
                            Id = 60,
                            CategoryId = 11,
                            Name = "Charitable Donations"
                        },
                        new
                        {
                            Id = 61,
                            CategoryId = 11,
                            Name = "Special Occasions"
                        },
                        new
                        {
                            Id = 62,
                            CategoryId = 12,
                            Name = "Pet Care"
                        },
                        new
                        {
                            Id = 63,
                            CategoryId = 12,
                            Name = "Subscriptions"
                        },
                        new
                        {
                            Id = 64,
                            CategoryId = 12,
                            Name = "Household Supplies"
                        },
                        new
                        {
                            Id = 65,
                            CategoryId = 12,
                            Name = "Travel Expenses"
                        });
                });

            modelBuilder.Entity("CreativeBudgeting.Models.TicketSeverity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Value")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("TicketSeverities");
                });

            modelBuilder.Entity("CreativeBudgeting.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("Hash")
                        .HasColumnType("text");

                    b.Property<byte[]>("ProfilePicture")
                        .HasColumnType("bytea");

                    b.Property<string>("ProfilePictureContentType")
                        .HasColumnType("text");

                    b.Property<string>("Username")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("CreativeBudgeting.Models.Expense", b =>
                {
                    b.HasOne("CreativeBudgeting.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CreativeBudgeting.Models.Paycheck", "Paycheck")
                        .WithMany("Expenses")
                        .HasForeignKey("PaycheckId");

                    b.HasOne("CreativeBudgeting.Models.Subcategory", "Subcategory")
                        .WithMany()
                        .HasForeignKey("SubcategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CreativeBudgeting.Models.User", "User")
                        .WithMany("Expenses")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Paycheck");

                    b.Navigation("Subcategory");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CreativeBudgeting.Models.HelpdeskTicket", b =>
                {
                    b.HasOne("CreativeBudgeting.Models.TicketSeverity", "TicketSeverity")
                        .WithMany()
                        .HasForeignKey("TicketSeverityId");

                    b.Navigation("TicketSeverity");
                });

            modelBuilder.Entity("CreativeBudgeting.Models.Paycheck", b =>
                {
                    b.HasOne("CreativeBudgeting.Models.User", "User")
                        .WithMany("Paychecks")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("CreativeBudgeting.Models.PersonalInfo", b =>
                {
                    b.HasOne("CreativeBudgeting.Models.User", "User")
                        .WithMany("PersonalInfos")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("CreativeBudgeting.Models.Savings", b =>
                {
                    b.HasOne("CreativeBudgeting.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("CreativeBudgeting.Models.Subcategory", b =>
                {
                    b.HasOne("CreativeBudgeting.Models.Category", "Category")
                        .WithMany("Subcategories")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("CreativeBudgeting.Models.Category", b =>
                {
                    b.Navigation("Subcategories");
                });

            modelBuilder.Entity("CreativeBudgeting.Models.Paycheck", b =>
                {
                    b.Navigation("Expenses");
                });

            modelBuilder.Entity("CreativeBudgeting.Models.User", b =>
                {
                    b.Navigation("Expenses");

                    b.Navigation("Paychecks");

                    b.Navigation("PersonalInfos");
                });
#pragma warning restore 612, 618
        }
    }
}
